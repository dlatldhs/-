xz , bzip2 ,
: 압축 해주는 명령어
Options
xz -k test.txt     (이렇게 하면 기존 파일 유지하고 압축을 함)
ex )
host04@ubunut$:$ ls

test.txt  test.txt.xz 이렇게 존재함

bzip2 압축방법
bzip2 -k test.txt

bzip2 : 압축 푸는 방법 
bunzip2 test.txt.bz2 == bzip2 -d test.txt.bz2
둘이 같은 개념 gzip 에도 g un zip => gzip 도 하면 gunzip test.txt.gz 이렇게 가능

zip => zip파일 만들어줌 -> aa.zip
zip aa.zip test.txt

xz -k a1.txt a2.txt -> 이렇게 두개 동시에 압축 가능함 이거는 다 따로 압축됨

zip 도 여러 개 동시 가능 -. 근데 하나로 뭉쳐서 나옴

zip al.zip *.* ---->>>>0 모든파일명.모든확장자( 디렉토리에 있는 모든 파일들

tape archive  ---> tar 파일 묶기
c : 새로운 묶음 파일 생성
x: 묶음 파일 풀기
t: 묶음 파일을 풀기 전에 묶인 경로를 보여줌
f(필수):anRdma vkdlfauddmf wlwjd
v:visual을 의미 파일을 묶거나 푸는 과정을 보여줌(생략가능)
전부다 tar 옵션인데 다 개별로 사용함

C : 지정된 디렉토리에 파일 품
J : tar + xz
z : tar + gzip
j : tar + bzip2


소형 고성능 저 전력 등이 특징

임베디드 시스템의 특징
경량화 최적화 -> 프로그램도 가벼오ㅝ야 함 
실시간성 -> 결과값이 실시간으로 나타나는 것

임베디스 시스템의 의미
트겆ㅇ한 제품이나 솔루션에서 주어진 작업을 수행할 수 있도록 추가로 타뱆되는 ㅁ솔루션 시스템

--> 1. 임베디드 시스템의 개념과 특징을 알아야됨

2,3,4 -> 펌웨어 / 펌웨어 펌웨어와 소프트웨어 차별점 ?
임베디드 리눅스

2.-> 15page
 RTOS -> Real Time 기능을 가지고 있는 OS
 정해진 시간 내에 타겟 시스템이 결과를 출력하는 실시간 시스템
3. -> 임베디드 시스템 개발 단계
18page ~ 24page
임베디드 실제 프로젝트를 할 때 단계를 진짜 그냥 알고 있나
그런 거 하는 거임
예) 분석 단계 -> 제품 기획서
    설계 단계 => UL설계서 , 소프트웨어 flow chart 회로도 같은 거
    나온다는 걸 알아야 함

4. -> 알아야 되는 내용 걍 거기 중간고사 대비 정리에 적혀있는 MCU GPU
이런 거 개념 다 알아야됨 ;; 
MPU -> CPU + memory (소형 컴퓨터 기능에 가까움)

GPU 가 빨리 처리하는 이유 -> 부동 소수점으로 그래픽 음성 등
멀티 데이터를 상대적으로 빨리 처리함
병렬 처리 방식

ARM

5. 이전에 결과 보여주고 나중에 결과 보여준 다음에
음 중간에 뭐가 있을 까 그런 걸 문제로 낸다

파이프라인 -> 

ls --help | grep sort (ls --help 결과값을 grep sort 해서 함)

정규표현식 안냄
근데 grep 의 개념을 이해해야함
파일이나 파이프 에 일치하는 걸 음 근데 정규표현식 알면 좋은 ㅡㅅ

rm result2.text 1> rename.txt 2>error2.log
1> 에러를 보냄
2> 실행 결과를 보냄

kernel 이 뭔지 알아야됨

shello script 는 리눅스의 명령어를 조합해서 한꺼번에 프로그램을 ㅏ는거

#!/bin/bash
if[!-d bak]; then <-- bak directory 가 없다면
	mkdir bak
	
fi

cp *.log bak

shell script 특별한 변수
ex ) $0 -> 스크립트 명을 나타냄 
이런 거 다 알아야 함 
왤 캐 외울게 많음

10. bin <-- 기본 적인 명령어 실행 파일이 들어있음 
그리고 디렉토리 계층 구조 상대 절대 차이를 분명하게 알아야 될 듯 약간 가물가물 한데 다시 한번 복습

퀴즈 그대로 낸 것도 있음

리눅스 런레벨
init 0 -> 종료 모드 이런 거 이게 런레벨 