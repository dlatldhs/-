주제 : 1의 보수와 2의 보수 개념 확실하게 다시 잡기

컴퓨터는 비트를 이용해 2의 N의 제곱 개의 정수만 표현 가능

보수의 개념

보수 = 두 수의 합이 진법의 밑수(N)가 되게 하는 수
ex) 10 진수 4의 10의 보수는 6이고
       10 진수 2의 10의 보수는 8임

보수가 생긴 이유 : 음의 정수를 표현하기 위해서

1의 보수 : 각 자리수의 값이 모두 1인 수에서 주어진 2진수를 빼면 1의 보수를 얻을 수 있다.

예시 ) 2진수 1010 의 1의 보수는 0101임 --> 1111(각 자리수의 값이 모두 1인 수) - 1010 = 0101

2의 보수 : 1의 보수에 1을 더한 값
예시 ) 
2진수 1010 에 대한 2의 보수를 구하려면 
2진수 1010 에 대한 1의 보수 0101을 구한 다음 
1을 더해 0110 을 얻는다.1010 + 0110 = 1 0000

덧셈 : 2진수 덧셈 = 10진수 덧셈 
뺄셈 : 보수를 이용해 덧셈으로 바꿈
ex) A - B  => A + (B의 보수)

1의 보수 뺄셈 : 빼는 수의 1의 보수를 구한 다음 더함
			if(최상위 비트에서 자리올림이 생김){
				최하위 비트에 1를 더하고
				Most Significant Bit(최상위 비트)는 지움
			}
			else(){
				연산 결과에 1의 보수를 구한후 - 부호를 붙임
			}
예시) (2진수로 가정)
	111 - 110 = 111 + 001 => 1000(MSB 자리올림 발생 O) -> 001
	100 - 110 = 100 + 001 => 101(  MSB 자리올림 발생 X ) -> -010

2의 보수 뺄셈 : 빼는 수의 2의 보수를 구한 다음 더함
			if(MSB 자리올림 발생) {
				자리올림을 제외한 나머지가 연산 결과
			}
			else{
				연산 결과의 2의 보수 구한 후 - 부호 붙임
			}
예시) (2진수로 가정)
	111 - 110 = 111 + 010 = 1001 MSB를 지움 -> 001임
	100 - 110 = 100 + 010 = 110(2의 보수 취함) -> -010 

















